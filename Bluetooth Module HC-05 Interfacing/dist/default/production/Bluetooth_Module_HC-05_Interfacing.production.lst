

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Nov 02 18:27:16 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 22/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     001A                     _RCREG	set	26
   169     0031                     _RB1	set	49
   170     0030                     _RB0	set	48
   171     00C4                     _CREN	set	196
   172     005E                     _PEIE	set	94
   173     005F                     _GIE	set	95
   174     0065                     _RCIF	set	101
   175     00C7                     _SPEN	set	199
   176     0099                     _SPBRG	set	153
   177     0431                     _TRISB1	set	1073
   178     0430                     _TRISB0	set	1072
   179     0465                     _RCIE	set	1125
   180     04C4                     _SYNC	set	1220
   181     04C2                     _BRGH	set	1218
   182     043F                     _TRISC7	set	1087
   183     043E                     _TRISC6	set	1086
   184                           
   185                           	psect	cinit
   186     000F                     start_initialization:	
   187                           ; #config settings
   188                           
   189     000F                     __initialization:
   190                           
   191                           ; Clear objects allocated to COMMON
   192     000F  01F2               	clrf	__pbssCOMMON& (0+127)
   193     0010                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196     0010                     __end_of__initialization:
   197     0010  0183               	clrf	3
   198     0011  120A  118A  284F   	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	bssCOMMON
   201     0072                     __pbssCOMMON:
   202     0072                     _UART_BUFFER:
   203     0072                     	ds	1
   204                           
   205                           	psect	cstackCOMMON
   206     0070                     __pcstackCOMMON:
   207     0070                     ?_UART_RX:
   208     0070                     ?_ISR:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0070                     ??_ISR:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     ?_main:	
   215                           ; 1 bytes @ 0x0
   216                           
   217                           
   218                           ; 1 bytes @ 0x0
   219     0070                     	ds	2
   220     0072                     ??_UART_RX:
   221     0072                     ??_main:	
   222                           ; 1 bytes @ 0x2
   223                           
   224                           
   225                           	psect	maintext
   226     004F                     __pmaintext:	
   227                           ; 1 bytes @ 0x2
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 28 in file "newmain.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;		None
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0, pclath, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : B00/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   247 ;;      Params:         0       0       0       0       0
   248 ;;      Locals:         0       0       0       0       0
   249 ;;      Temps:          0       0       0       0       0
   250 ;;      Totals:         0       0       0       0       0
   251 ;;Total ram usage:        0 bytes
   252 ;; Hardware stack levels required when called: 2
   253 ;; This function calls:
   254 ;;		_UART_RX
   255 ;; This function is called by:
   256 ;;		Startup code after reset
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260     004F                     _main:	
   261                           ;psect for function _main
   262                           
   263     004F                     l634:	
   264                           ;incstack = 0
   265                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   266                           
   267                           
   268                           ;newmain.c: 29:     UART_RX();
   269     004F  120A  118A  203A  120A  118A  	fcall	_UART_RX
   270     0054                     l636:
   271                           
   272                           ;newmain.c: 30:     TRISB0 = 0;
   273     0054  1683               	bsf	3,5	;RP0=1, select bank1
   274     0055  1303               	bcf	3,6	;RP1=0, select bank1
   275     0056  1006               	bcf	6,0	;volatile
   276     0057                     l638:
   277                           
   278                           ;newmain.c: 31:     TRISB1 = 0;
   279     0057  1086               	bcf	6,1	;volatile
   280     0058                     l640:
   281                           
   282                           ;newmain.c: 32:     RB0 = 0; RB1 = 0;
   283     0058  1283               	bcf	3,5	;RP0=0, select bank0
   284     0059  1303               	bcf	3,6	;RP1=0, select bank0
   285     005A  1006               	bcf	6,0	;volatile
   286     005B                     l642:
   287     005B  1086               	bcf	6,1	;volatile
   288     005C                     l51:	
   289                           ;newmain.c: 33:     while(1){
   290                           
   291     005C                     l52:	
   292                           ;newmain.c: 35:     }
   293                           
   294     005C  285C               	goto	l51
   295     005D  120A  118A  280C   	ljmp	start
   296     0060                     __end_of_main:
   297                           
   298                           	psect	text1
   299     003A                     __ptext1:	
   300 ;; *************** function _UART_RX *****************
   301 ;; Defined at:
   302 ;;		line 7 in file "newmain.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;		None
   305 ;; Auto vars:     Size  Location     Type
   306 ;;		None
   307 ;; Return value:  Size  Location     Type
   308 ;;                  1    wreg      void 
   309 ;; Registers used:
   310 ;;		wreg
   311 ;; Tracked objects:
   312 ;;		On entry : 0/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   316 ;;      Params:         0       0       0       0       0
   317 ;;      Locals:         0       0       0       0       0
   318 ;;      Temps:          0       0       0       0       0
   319 ;;      Totals:         0       0       0       0       0
   320 ;;Total ram usage:        0 bytes
   321 ;; Hardware stack levels used: 1
   322 ;; Hardware stack levels required when called: 1
   323 ;; This function calls:
   324 ;;		Nothing
   325 ;; This function is called by:
   326 ;;		_main
   327 ;; This function uses a non-reentrant model
   328 ;;
   329                           
   330     003A                     _UART_RX:	
   331                           ;psect for function _UART_RX
   332                           
   333     003A                     l598:	
   334                           ;incstack = 0
   335                           ; Regs used in _UART_RX: [wreg]
   336                           
   337                           
   338                           ;newmain.c: 8:     TRISC6 = 1; TRISC7 = 1;
   339     003A  1683               	bsf	3,5	;RP0=1, select bank1
   340     003B  1303               	bcf	3,6	;RP1=0, select bank1
   341     003C  1707               	bsf	7,6	;volatile
   342     003D  1787               	bsf	7,7	;volatile
   343                           
   344                           ;newmain.c: 9:     BRGH = 1;
   345     003E  1518               	bsf	24,2	;volatile
   346     003F                     l600:
   347                           
   348                           ;newmain.c: 10:     SPBRG = 25;
   349     003F  3019               	movlw	25
   350     0040  0099               	movwf	25	;volatile
   351     0041                     l602:
   352                           
   353                           ;newmain.c: 11:     SYNC = 0;
   354     0041  1218               	bcf	24,4	;volatile
   355     0042                     l604:
   356                           
   357                           ;newmain.c: 12:     SPEN = 1;
   358     0042  1283               	bcf	3,5	;RP0=0, select bank0
   359     0043  1303               	bcf	3,6	;RP1=0, select bank0
   360     0044  1798               	bsf	24,7	;volatile
   361     0045                     l606:
   362                           
   363                           ;newmain.c: 13:     RCIE = 1;
   364     0045  1683               	bsf	3,5	;RP0=1, select bank1
   365     0046  1303               	bcf	3,6	;RP1=0, select bank1
   366     0047  168C               	bsf	12,5	;volatile
   367     0048                     l608:
   368                           
   369                           ;newmain.c: 14:     RCIF = 0;
   370     0048  1283               	bcf	3,5	;RP0=0, select bank0
   371     0049  1303               	bcf	3,6	;RP1=0, select bank0
   372     004A  128C               	bcf	12,5	;volatile
   373     004B                     l610:
   374                           
   375                           ;newmain.c: 15:     GIE = 1;
   376     004B  178B               	bsf	11,7	;volatile
   377     004C                     l612:
   378                           
   379                           ;newmain.c: 16:     PEIE = 1;
   380     004C  170B               	bsf	11,6	;volatile
   381     004D                     l614:
   382                           
   383                           ;newmain.c: 17:     CREN = 1;
   384     004D  1618               	bsf	24,4	;volatile
   385     004E                     l37:
   386     004E  0008               	return
   387     004F                     __end_of_UART_RX:
   388                           
   389                           	psect	text2
   390     0014                     __ptext2:	
   391 ;; *************** function _ISR *****************
   392 ;; Defined at:
   393 ;;		line 19 in file "newmain.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, status,2, status,0
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   407 ;;      Params:         0       0       0       0       0
   408 ;;      Locals:         0       0       0       0       0
   409 ;;      Temps:          2       0       0       0       0
   410 ;;      Totals:         2       0       0       0       0
   411 ;;Total ram usage:        2 bytes
   412 ;; Hardware stack levels used: 1
   413 ;; This function calls:
   414 ;;		Nothing
   415 ;; This function is called by:
   416 ;;		Interrupt level 1
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420     0014                     _ISR:	
   421                           ;psect for function _ISR
   422                           
   423     0014                     i1l616:
   424                           
   425                           ;newmain.c: 20:     if(RCIF){
   426     0014  1283               	bcf	3,5	;RP0=0, select bank0
   427     0015  1303               	bcf	3,6	;RP1=0, select bank0
   428     0016  1E8C               	btfss	12,5	;volatile
   429     0017  2819               	goto	u1_21
   430     0018  281A               	goto	u1_20
   431     0019                     u1_21:
   432     0019  2833               	goto	i1l46
   433     001A                     u1_20:
   434     001A                     i1l618:
   435                           
   436                           ;newmain.c: 21:         UART_BUFFER = RCREG;
   437     001A  081A               	movf	26,w	;volatile
   438     001B  00F2               	movwf	_UART_BUFFER
   439     001C                     i1l620:
   440                           
   441                           ;newmain.c: 22:         if(UART_BUFFER == 49) RB0 = 1;
   442     001C  3031               	movlw	49
   443     001D  0672               	xorwf	_UART_BUFFER,w
   444     001E  1D03               	btfss	3,2
   445     001F  2821               	goto	u2_21
   446     0020  2822               	goto	u2_20
   447     0021                     u2_21:
   448     0021  2823               	goto	i1l624
   449     0022                     u2_20:
   450     0022                     i1l622:
   451     0022  1406               	bsf	6,0	;volatile
   452     0023                     i1l624:
   453                           
   454                           ;newmain.c: 23:         if(UART_BUFFER == 50) RB0 = 0;
   455     0023  3032               	movlw	50
   456     0024  0672               	xorwf	_UART_BUFFER,w
   457     0025  1D03               	btfss	3,2
   458     0026  2828               	goto	u3_21
   459     0027  2829               	goto	u3_20
   460     0028                     u3_21:
   461     0028  282A               	goto	i1l628
   462     0029                     u3_20:
   463     0029                     i1l626:
   464     0029  1006               	bcf	6,0	;volatile
   465     002A                     i1l628:
   466                           
   467                           ;newmain.c: 24:         if(UART_BUFFER == 51) RB1 = ~RB1;
   468     002A  3033               	movlw	51
   469     002B  0672               	xorwf	_UART_BUFFER,w
   470     002C  1D03               	btfss	3,2
   471     002D  282F               	goto	u4_21
   472     002E  2830               	goto	u4_20
   473     002F                     u4_21:
   474     002F  2832               	goto	i1l632
   475     0030                     u4_20:
   476     0030                     i1l630:
   477     0030  3002               	movlw	2
   478     0031  0686               	xorwf	6,f
   479     0032                     i1l632:
   480                           
   481                           ;newmain.c: 25:         RCIF = 0;
   482     0032  128C               	bcf	12,5	;volatile
   483     0033                     i1l46:
   484     0033  0871               	movf	??_ISR+1,w
   485     0034  008A               	movwf	10
   486     0035  0E70               	swapf	??_ISR,w
   487     0036  0083               	movwf	3
   488     0037  0EFE               	swapf	btemp,f
   489     0038  0E7E               	swapf	btemp,w
   490     0039  0009               	retfie
   491     003A                     __end_of_ISR:
   492     007E                     btemp	set	126	;btemp
   493     007E                     wtemp0	set	126
   494                           
   495                           	psect	intentry
   496     0004                     __pintentry:	
   497                           ;incstack = 0
   498                           ; Regs used in _ISR: [wreg+status,2+status,0]
   499                           
   500     0004                     interrupt_function:
   501     007E                     saved_w	set	btemp
   502     0004  00FE               	movwf	btemp
   503     0005  0E03               	swapf	3,w
   504     0006  00F0               	movwf	??_ISR
   505     0007  080A               	movf	10,w
   506     0008  00F1               	movwf	??_ISR+1
   507     0009  120A  118A  2814   	ljmp	_ISR
   508                           
   509                           	psect	config
   510                           
   511                           ;Config register CONFIG @ 0x2007
   512                           ;	Oscillator Selection bits
   513                           ;	FOSC = XT, XT oscillator
   514                           ;	Watchdog Timer Enable bit
   515                           ;	WDTE = OFF, WDT disabled
   516                           ;	Power-up Timer Enable bit
   517                           ;	PWRTE = ON, PWRT enabled
   518                           ;	Brown-out Reset Enable bit
   519                           ;	BOREN = ON, BOR enabled
   520                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   521                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   522                           ;	Data EEPROM Memory Code Protection bit
   523                           ;	CPD = OFF, Data EEPROM code protection off
   524                           ;	Flash Program Memory Write Enable bits
   525                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   526                           ;	In-Circuit Debugger Mode bit
   527                           ;	DEBUG = 0x1, unprogrammed default
   528                           ;	Flash Program Memory Code Protection bit
   529                           ;	CP = OFF, Code protection off
   530     2007                     	org	8199
   531     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                            _UART_RX
 ---------------------------------------------------------------------------------
 (1) _UART_RX                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_RX

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       3      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Nov 02 18:27:16 2023

                     l51 005C                       l52 005C                       l37 004E  
                    l600 003F                      l610 004B                      l602 0041  
                    l612 004C                      l604 0042                      l614 004D  
                    l606 0045                      l608 0048                      l640 0058  
                    l642 005B                      l634 004F                      l636 0054  
                    l638 0057                      l598 003A                      _GIE 005F  
                    _RB0 0030                      _RB1 0031                      _ISR 0014  
                   ?_ISR 0070                     _BRGH 04C2                     _CREN 00C4  
                   _PEIE 005E                     _RCIE 0465                     _RCIF 0065  
                   i1l46 0033                     _SPEN 00C7                     _SYNC 04C4  
                   u1_20 001A                     u1_21 0019                     u2_20 0022  
                   u2_21 0021                     u3_20 0029                     u3_21 0028  
                   u4_20 0030                     u4_21 002F          __end_of_UART_RX 004F  
                   _main 004F                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    i1l620 001C  
                  i1l630 0030                    i1l622 0022                    i1l632 0032  
                  i1l624 0023                    i1l616 0014                    i1l626 0029  
                  i1l618 001A                    i1l628 002A                    _RCREG 001A  
                  _SPBRG 0099                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0060  
                 ??_main 0072                ??_UART_RX 0072                   _TRISB0 0430  
                 _TRISB1 0431                   _TRISC6 043E                   _TRISC7 043F  
                 saved_w 007E  __end_of__initialization 0010           __pcstackCOMMON 0070  
             __pmaintext 004F               __pintentry 0004                  _UART_RX 003A  
                __ptext1 003A                  __ptext2 0014     end_of_initialization 0010  
    start_initialization 000F              __end_of_ISR 003A              __pbssCOMMON 0072  
              ___latbits 0002                 ?_UART_RX 0070        interrupt_function 0004  
            _UART_BUFFER 0072                 intlevel1 0000  
